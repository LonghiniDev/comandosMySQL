CREATE DATABASE REVISAO; -- DROP DATABASE REVISAO

USE REVISAO;

CREATE TABLE DEPT
    (DEPTNO INT(2) PRIMARY KEY,
	DNAME VARCHAR(14) ,
	LOC VARCHAR(13) ) ;

CREATE TABLE EMP
   (EMPNO INT PRIMARY KEY,
	ENAME VARCHAR(10),
	JOB VARCHAR(9),
	MGR INT,
	HIREDATE DATE,
	SAL decimal(7,2),
	COMM decimal(7,2),
    DEPTNO INT,
    constraint fk_depto foreign key (DEPTNO) REFERENCES DEPT(DEPTNO));    

CREATE TABLE BONUS
	(
	ENAME VARCHAR(10)	,
	JOB VARCHAR(9)  ,
	SAL DECIMAL(7,2),
	COMM DECIMAL(7,2)
	) ;
    
CREATE TABLE SALGRADE
      ( GRADE INTEGER,
	LOSAL DECIMAL(9,2),
	HISAL DECIMAL(9,2) );

CREATE TABLE CODFUNC(
	CodFun INT PRIMARY KEY NOT NULL,
    NOME VARCHAR (40) NOT NULL,
    DEPTO CHAR (2),
    FUNCAO CHAR (2),
    SALARIO DECIMAL (10,2)
);

show tables;

describe CODFUNC;

INSERT INTO DEPT VALUES
	(10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES
	(30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES
	(40,'OPERATIONS','BOSTON');
    
INSERT INTO EMP VALUES
(7369,'SMITH','CLERK',7902,'19801217',800,NULL,20);
INSERT INTO EMP VALUES
(7499,'ALLEN','SALESMAN',7698,'19810220',1600,300,30);
INSERT INTO EMP VALUES
(7521,'WARD','SALESMAN',7698,'19810222',1250,500,30);
INSERT INTO EMP VALUES
(7566,'JONES','MANAGER',7839,'19810402',2975,NULL,20);
INSERT INTO EMP VALUES
(7654,'MARTIN','SALESMAN',7698,'19810928',1250,1400,30);
INSERT INTO EMP VALUES
(7698,'BLAKE','MANAGER',7839,'19810501',2850,NULL,30);
INSERT INTO EMP VALUES
(7782,'CLARK','MANAGER',7839,'19810609',2450,NULL,10);
INSERT INTO EMP VALUES
(7788,'SCOTT','ANALYST',7566,'19870713',3000,NULL,20);
INSERT INTO EMP VALUES
(7839,'KING','PRESIDENT',NULL,'19700813',5000,NULL,10);
INSERT INTO EMP VALUES
(7844,'TURNER','SALESMAN',7698,'19810908',1500,0,30);
INSERT INTO EMP VALUES
(7876,'ADAMS','CLERK',7788,'19870713',1100,NULL,20);
INSERT INTO EMP VALUES
(7900,'JAMES','CLERK',7698,'19810312',950,NULL,30);
INSERT INTO EMP VALUES
(7902,'FORD','ANALYST',7566,'19811203',3000,NULL,20);
INSERT INTO EMP VALUES
(7934,'MILLER','CLERK',7782,'19820123',1300,NULL,10);
INSERT INTO EMP VALUES
(8735,'TESTE1','CLERK',7842,'19820143',1800,NULL,10);

INSERT INTO SALGRADE VALUES (1,700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);
COMMIT;	
    
SELECT * FROM DEPT;
INSERT INTO DEPT (DEPTNO,DNAME,LOC)
VALUES (41, 'ESOFT', 'MGA');

-- ERROR, Ja existe o Deptno 40
SELECT * FROM DEPT;
INSERT INTO DEPT (DEPTNO,DNAME,LOC)
VALUES (40, 'ESOFT', 'MGA');

 -- Seleciona sem repetir de forma distinta.
select distinct job from emp;

Use Aula3; 
UPDATE EMP
SET DEPTNO = 41
WHERE JOB = 'ANALYST';

-- não exisste o DEPTNO 50 = ERROR
INSERT INTO EMP (EMPNO,ENAME,SAL,DEPTNO)
VALUES (9999,'TESTE',5000.00, 50);

INSERT INTO dept(DNAME,DEPTNO)
VALUES ('ADS',50);

-- SELECIONAR (VERIFICAR)
SELECT * FROM EMP
WHERE JOB = 'ANALYST' OR DEPTNO = 50;
-- DELETAR
DELETE FROM EMP
WHERE JOB = 'ANALYST' OR DEPTNO = 50;

-- COMM IS NULL ou 0. PORTAS LÓGICAS!
SELECT * FROM EMP
WHERE SAL > 2000.00 AND (COMM IS NULL OR comm = 0);

SELECT * FROM EMP
WHERE ENAME LIKE '%M%';

-- INNER JOIN!!!
SELECT D.DNAME, E.ENAME
FROM DEPT D
INNER JOIN EMP E ON D.DEPTNO = E.DEPTNO
ORDER BY D.DNAME DESC, E.ENAME;

-- SELECIONAR JOB E NOME DOS EMP (NOT * FROM)
SELECT JOB,ENAME FROM EMP
WHERE ENAME LIKE '%A%'
Order By Deptno;

INSERT INTO CODFUNC
(CODFUN, NOME, DEPTO, FUNCAO, SALARIO)  
VALUES (12, 'CARLOS ALBERTO', '3', 'VENDEDOR', 1530.00);

INSERT INTO CODFUNC
(CODFUN, NOME, DEPTO, FUNCAO, SALARIO)
VALUES (15, 'MARCOS HENRIQUE','2', 'GERENTE',1985.75);

INSERT INTO CODFUNC
(CODFUN, NOME, DEPTO, FUNCAO, SALARIO)
VALUES (7, 'APARECIDO SILVA','3','SECRETARIA',1200.50);

INSERT INTO CODFUNC
(CODFUN, NOME, DEPTO, SALARIO)  
VALUES (44, 'JACIBA DA SILVA', '3', 1500.00); 

INSERT INTO CODFUNC VALUES ( 2, 'WILSON DE MACEDO', '3', 'PROGRAMADOR', 1050.00); 
INSERT INTO CODFUNC VALUES ( 5, 'AUGUSTO SOUZA', '3', 'PROGRAMADOR', 1050.00);

SELECT COUNT(CODFUN) FROM CODFUNC;

SELECT * FROM CODFUNC ORDER BY SALARIO;

DELETE FROM CODFUNC  WHERE CodFun IS NULL;

SELECT concat(NOME, ' - ', SALARIO) 'NOME & SALÁRIO' -- 'NOME_&_SALÁRIO'
 FROM CODFUNC;
 
 SELECT DISTINCT DEPTO FROM CODFUNC; -- RESULTADOS NÃO REPETIDOS
 
 DELETE FROM CODFUNC WHERE DEPTO = '2';
 
 SELECT DISTINCT DEPTO FROM CODFUNC;
 
 DELETE FROM CODFUNC WHERE NOME = 'MARCELO SOUZA';
 
 SELECT * FROM CODFUNC;
 
 -- ----------------------------------------------- -- 
 
 ALTER TABLE CodFunc ADD ADMISSAO DATE; -- ADD TABELA!!!
 
 SELECT * FROM CODFUNC;
 
 UPDATE CODFUNC SET ADMISSAO = '2006-01-15' WHERE CODFUN = 2; 
 UPDATE CODFUNC SET ADMISSAO = '1999-10-21' WHERE CODFUN = 3; 
 UPDATE CODFUNC SET ADMISSAO = '2004-10-21' WHERE CODFUN = 4;
 
 UPDATE CODFUNC SET ADMISSAO = '2006-04-26' WHERE CODFUN = 5;
 UPDATE CODFUNC SET ADMISSAO = '1980-05-10' WHERE CODFUN = 7;
 UPDATE CODFUNC SET ADMISSAO = '1999-12-15' WHERE CODFUN = 9;
 
 UPDATE CODFUNC SET ADMISSAO = '2000-12-21' WHERE CODFUN = 12; 
 UPDATE CODFUNC SET ADMISSAO = '2000-10-21' WHERE CODFUN = 25;
 
 SELECT * FROM CODFUNC;
 
-- Extração!!! DATE
 
SELECT NOME, ADMISSAO FROM CODFUNC WHERE MONTH(ADMISSAO) = 12;

SELECT NOME, ADMISSAO FROM CODFUNC WHERE ADMISSAO >= '200001-01';

SELECT NOME, ADMISSAO FROM CODFUNC WHERE DAY(ADMISSAO) = 15 AND MONTH(ADMISSAO) = 1;

-- INSERT PART II

INSERT INTO CODFUNC VALUES ( 15, 'MARCOS HENRIQUE', '2', 'GERENTE', 2184.33, '2006-05-25'); 
INSERT INTO CODFUNC VALUES ( 20, 'AUDREY TOLEDO', '2', 'SUPERVISORA', 1700.00, '2006-07-05');
INSERT INTO CODFUNC VALUES ( 22, 'SANDRA MANZANO', '2','ANALISTA', 2000.00, '2006-07-01');
INSERT INTO CODFUNC VALUES ( 24, 'MARCIO CANUTO', '2', 'PROGRAMADOR', 1200.00, '2006-07-10'); 
 
 SELECT * FROM CODFUNC;
 
 CREATE TABLE MORTO(
 CODFUN   INTEGER PRIMARY KEY, 
 NOME	VARCHAR(40), 
 DEPTO	CHAR( 2), 
 FUNCAO	CHAR(20), 
 SALARIO	DECIMAL(10, 2), 
 ADMISSAO	DATE
 );
 
 
SHOW TABLES;

-- TRANSFERIR DADOS DE TABELAS!!!
INSERT INTO MORTO SELECT 
CODFUN, NOME, DEPTO, FUNCAO, SALARIO, ADMISSAO 
FROM CODFUNC WHERE CODFUN = 12;

SELECT * FROM MORTO; 

DELETE FROM CODFUNC WHERE CODFUN = 12; -- DELETAR DA ANTIGA TABELA

SELECT * FROM CODFUNC;

SELECT * FROM MORTO;

-- EXERCICIOS

SELECT NOME, FUNCAO FROM CODFUNC;

SELECT NOME, CodFun, FUNCAO FROM CODFUNC;

SELECT NOME, CodFun, FUNCAO, DEPTO FROM CODFUNC;

SELECT NOME FROM CODFUNC WHERE DEPTO = 5;

SELECT NOME,DEPTO FROM CODFUNC WHERE FUNCAO LIKE '%VE%';

SELECT DISTINCT FUNCAO FROM CODFUNC;

SELECT SALARIO FROM CODFUNC WHERE DEPTO = 3
ORDER BY SALARIO DESC;

-- EXCLUSÃO DATA

SELECT * FROM CODFUNC WHERE YEAR(ADMISSAO) < 2018 - 5;

SELECT * FROM CODFUNC WHERE YEAR(ADMISSAO) < 2005;

SELECT * FROM CODFUNC WHERE MONTH(ADMISSAO) = 10;

-- -----------------------------------------------------

SELECT NOME, FUNCAO FROM CODFUNC ORDER BY FUNC DESC;

SELECT NOME, FUNCAO, SALARIO FROM CODFUNC
 ORDER BY SALARIO DESC;

-- OPERADORES COMPARAÇÃO

SELECT * FROM CODFUNC WHERE DEPTO = ‘5’;
 SELECT * FROM CODFUNC WHERE FUNCAO = 'VENDEDOR'; 
 SELECT * FROM CODFUNC WHERE SALARIO <= 1700; 
 SELECT * FROM CODFUNC WHERE SALARIO > 1700 + 50;
 SELECT * FROM CODFUNC WHERE SALARIO > (1700 + 50);
 
 -- OPERADORES LÓGICOS
 
 SELECT * FROM CODFUNC WHERE (DEPTO = '3') AND (FUNCAO = 'PROGRAMADOR');
 SELECT * FROM CODFUNC WHERE (DEPTO = '3') OR (DEPTO = '5');
 SELECT * FROM CODFUNC WHERE NOT (FUNCAO = 'VENDEDOR');
 SELECT * FROM CODFUNC WHERE (DEPTO = '5') XOR (FUNCAO = 'PROGRAMADOR'); 

-- OPERADORES ADICIONAIS

ALTER TABLE CODFUNC ADD FILHOS SMALLINT; 
ALTER TABLE MORTO ADD FILHOS SMALLINT; 

 SELECT NOME, FILHOS FROM CODFUNC;
 SELECT CODFUN, NOME, FILHOS FROM CODFUNC WHERE FILHOS IS NULL;
 SELECT CODFUN, NOME, FILHOS FROM CODFUNC WHERE NOT FILHOS IS NULL;
 SELECT CODFUN, NOME, FILHOS FROM CODFUNC WHERE FILHOS IS NOT NULL;
 SELECT CODFUN, NOME, FILHOS FROM CODFUNC WHERE NOT (FILHOS IS NULL);

--  ATUALIZAR E ADD

 UPDATE CODFUNC SET FILHOS = 1 WHERE CODFUN = 2;
 UPDATE CODFUNC SET FILHOS = 3 WHERE CODFUN = 3; 
 UPDATE CODFUNC  SET FILHOS = 2 WHERE CODFUN = 5; 
 UPDATE CODFUNC SET FILHOS = 1 WHERE CODFUN = 9; 
 UPDATE CODFUNC SET FILHOS = 4 WHERE CODFUN = 20; 
 UPDATE CODFUNC SET FILHOS = 3 WHERE CODFUN = 25; 
 
 -- SELECT
 
 SELECT CODFUN, NOME, FILHOS FROM CODFUNC;
 
 SELECT CODFUN, NOME, FILHOS FROM CODFUNC
 WHERE FILHOS IS NULL;
 
 SELECT CODFUN, NOME, FILHOS FROM CODFUNC
 WHERE NOT (FILHOS IS NULL); 
 
 SELECT * FROM CODFUNC
 WHERE SALARIO BETWEEN 1700 AND 2000; 
 
 SELECT * FROM CODFUNC
 WHERE SALARIO NOT BETWEEN 1700 AND 2000; 
 
 SELECT * FROM CODFUNC;
 
 -- FUNÇÕES!!! AVG, COUNT, MAX, MIN
 
 SELECT AVG(SALARIO) FROM CODFUNC; 
 SELECT AVG(SALARIO) FROM CODFUNC WHERE DEPTO = '3'; 
 
 SELECT COUNT(*) FROM CODFUNC WHERE DEPTO = '3';
 SELECT COUNT(*) FROM cadfun WHERE SALARIO > 2000; 
 
 SELECT COUNT(DISTINCT DEPTO) FROM CODFUNC; 
 SELECT MAX(SALARIO) FROM CODFUNC; 
 SELECT MIN(SALARIO) FROM CODFUNC;
 
 SELECT STD(FILHOS) FROM CODFUNC; 
 SELECT STDDEV(FILHOS) FROM CODFUNC;
  SELECT VARIANCE(FILHOS) FROM CODFUNC;
  
 SELECT SUM(SALARIO) FROM CODFUNC; 
 SELECT SUM(SALARIO) FROM CODFUNC WHERE DEPTO = '2'; 
 
 -- MAIS EXEMPLOS:
 
 SELECT SALARIO FROM CODFUNC; 
 SELECT AVG(SALARIO) FROM CODFUNC; 
 SELECT SUM(SALARIO) FROM CODFUNC; 

 SELECT COUNT(SALARIO) FROM CODFUNC; 
 SELECT MIN(SALARIO) FROM CODFUNC; 
 
  SELECT COUNT(*) FROM CODFUNC; 
 
 SELECT FILHOS FROM CODFUNC; 
 SELECT STD(FILHOS) FROM CODFUNC; 
 SELECT VARIANCE(FILHOS) FROM CODFUNC;
 
 -- FUNÇÃO DATA E HORA!
 
 SELECT NOME, DATEDIFF('2006-09-15', ADMISSAO) FROM CODFUNC; 
 SELECT NOME, DATEDIFF('2006-09-15', ADMISSAO) / 365 FROM CODFUNC; 
 SELECT DAY(ADMISSAO), MONTH(ADMISSAO), YEAR(ADMISSAO) FROM CODFUNC; 
 SELECT NOME, ADMISSAO, MONTHNAME(ADMISSAO) FROM CODFUNC;
 SELECT HOUR(NOW()), MINUTE(NOW()), SECOND(NOW()); 
 
-- FUNÇÕES DE AGREGAÇÃO!!!

-- CONTAR FUNC MULHERES
SELECT COUNT(IN_SEXO)
From FUNC
WHERE IN_SEXO Like '%F%';

-- CALCULAR SALÁRIOS
SELECT
 SUM(VL_SAL) 'SOMA',
 MAX(VL_SAL) 'MAXIMO SAL',
 MIN(VL_SAL) 'SAL MIN',
  ROUND(AVG(VL_SAL)) 'MÉDIA' -- ARREDONDAR 
FROM FUNC;

SELECT COUNT(NM_FUNC) FROM FUNC;

-- 2 INNER JOIN!!!
SELECT G.NM_FUNC GERENTE
FROM DEPTO D INNER JOIN FUNC G ON D.CD_GERENTE = G.CD_MAT
			 INNER JOIN FUNC F ON D.CD_DEPTO = F.CD_DEPTO
GROUP BY G.NM_FUNC;
 